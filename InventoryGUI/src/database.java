
/*  This build is made using a Netbeans Ant build
    The SQL library is added manually
    You can connect to the database using Services > Databases > and connecting to the local database server.

    A lot of the code and comments here are auto-generated by Netbeans
*/

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.*;
import javax.swing.table.*;

public class database extends javax.swing.JFrame {
    
    static String url = "jdbc:mysql://127.0.0.1:3306/?user=root";
    static String user = "root";
    static String password = "admin";
    static Connection myConn;
    
    public database() {
        initComponents();
        this.setLocationRelativeTo(null);
        addProductFrame.setLocationRelativeTo(null);
        addUserFrame.setLocationRelativeTo(null);
        
        //Initialize Product Table
        updateProductTable();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addProductFrame = new javax.swing.JFrame();
        pNameField = new javax.swing.JTextField();
        pNameText = new javax.swing.JLabel();
        pDescriptionText = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pDescriptionField = new javax.swing.JTextArea();
        pCategoryText = new javax.swing.JLabel();
        pCategoryField = new javax.swing.JTextField();
        pPriceText = new javax.swing.JLabel();
        pPriceField = new javax.swing.JTextField();
        pStockText = new javax.swing.JLabel();
        pStockField = new javax.swing.JTextField();
        pMinStockText = new javax.swing.JLabel();
        pMinStockField = new javax.swing.JTextField();
        pMaxStockField = new javax.swing.JTextField();
        pMaxStockText = new javax.swing.JLabel();
        pConfirmButton = new javax.swing.JButton();
        pCancelButton = new javax.swing.JButton();
        addUserFrame = new javax.swing.JFrame();
        uFirstNameField = new javax.swing.JTextField();
        pStockText1 = new javax.swing.JLabel();
        pNameText1 = new javax.swing.JLabel();
        uAccessField = new javax.swing.JTextField();
        pDescriptionText1 = new javax.swing.JLabel();
        pCategoryText1 = new javax.swing.JLabel();
        uConfirmButton = new javax.swing.JButton();
        uEmailField = new javax.swing.JTextField();
        uCancelButton = new javax.swing.JButton();
        pPriceText1 = new javax.swing.JLabel();
        uLastNameField = new javax.swing.JTextField();
        uPasswordField = new javax.swing.JPasswordField();
        productFrame = new javax.swing.JPanel();
        updateProductButton = new javax.swing.JButton();
        addProductButton = new javax.swing.JButton();
        removeProductButton = new javax.swing.JButton();
        productBackButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        productTable = new javax.swing.JTable();
        searchField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        addUserButton = new javax.swing.JButton();

        addProductFrame.setTitle("Add Product");
        addProductFrame.setMinimumSize(new java.awt.Dimension(370, 370));

        pNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pNameFieldActionPerformed(evt);
            }
        });

        pNameText.setText("Name:");

        pDescriptionText.setText("Description:");

        pDescriptionField.setColumns(20);
        pDescriptionField.setRows(5);
        jScrollPane1.setViewportView(pDescriptionField);

        pCategoryText.setText("Category:");

        pPriceText.setText("Price:");

        pPriceField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pPriceFieldActionPerformed(evt);
            }
        });

        pStockText.setText("Stock:");

        pStockField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pStockFieldActionPerformed(evt);
            }
        });

        pMinStockText.setText("Min Stock:");

        pMinStockField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pMinStockFieldActionPerformed(evt);
            }
        });

        pMaxStockText.setText("Max Stock:");

        pConfirmButton.setText("Confirm");
        pConfirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pConfirmButtonActionPerformed(evt);
            }
        });

        pCancelButton.setText("Cancel");
        pCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pCancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addProductFrameLayout = new javax.swing.GroupLayout(addProductFrame.getContentPane());
        addProductFrame.getContentPane().setLayout(addProductFrameLayout);
        addProductFrameLayout.setHorizontalGroup(
            addProductFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addProductFrameLayout.createSequentialGroup()
                .addGroup(addProductFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addProductFrameLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(addProductFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addProductFrameLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(pConfirmButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pCancelButton))
                            .addGroup(addProductFrameLayout.createSequentialGroup()
                                .addComponent(pDescriptionText)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 26, Short.MAX_VALUE))))
                    .addGroup(addProductFrameLayout.createSequentialGroup()
                        .addGroup(addProductFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addProductFrameLayout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(pNameText)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(addProductFrameLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(addProductFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(addProductFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(pStockText)
                                        .addComponent(pPriceText)
                                        .addComponent(pMinStockText))
                                    .addComponent(pCategoryText, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(addProductFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(addProductFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(pPriceField)
                                        .addComponent(pStockField, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(addProductFrameLayout.createSequentialGroup()
                                        .addComponent(pMinStockField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(10, 10, 10)
                                        .addComponent(pMaxStockText)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(pMaxStockField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(pCategoryField, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        addProductFrameLayout.setVerticalGroup(
            addProductFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addProductFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addProductFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pNameText))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addProductFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pDescriptionText)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addProductFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pCategoryText)
                    .addComponent(pCategoryField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addProductFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pPriceText)
                    .addComponent(pPriceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addProductFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pStockText)
                    .addComponent(pStockField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addProductFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pMinStockText)
                    .addComponent(pMinStockField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pMaxStockField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pMaxStockText))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(addProductFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pConfirmButton)
                    .addComponent(pCancelButton))
                .addContainerGap())
        );

        addUserFrame.setMinimumSize(new java.awt.Dimension(400, 220));

        uFirstNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uFirstNameFieldActionPerformed(evt);
            }
        });

        pStockText1.setText("Access:");

        pNameText1.setText("First Name:");

        uAccessField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uAccessFieldActionPerformed(evt);
            }
        });

        pDescriptionText1.setText("Last Name:");

        pCategoryText1.setText("Email:");

        uConfirmButton.setText("Confirm");
        uConfirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uConfirmButtonActionPerformed(evt);
            }
        });

        uCancelButton.setText("Cancel");
        uCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uCancelButtonActionPerformed(evt);
            }
        });

        pPriceText1.setText("Password:");

        javax.swing.GroupLayout addUserFrameLayout = new javax.swing.GroupLayout(addUserFrame.getContentPane());
        addUserFrame.getContentPane().setLayout(addUserFrameLayout);
        addUserFrameLayout.setHorizontalGroup(
            addUserFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addUserFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addUserFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addUserFrameLayout.createSequentialGroup()
                        .addGap(0, 240, Short.MAX_VALUE)
                        .addComponent(uConfirmButton))
                    .addGroup(addUserFrameLayout.createSequentialGroup()
                        .addGroup(addUserFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(pDescriptionText1)
                            .addComponent(pNameText1)
                            .addComponent(pCategoryText1)
                            .addComponent(pPriceText1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(addUserFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(uEmailField)
                            .addGroup(addUserFrameLayout.createSequentialGroup()
                                .addGroup(addUserFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(addUserFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(uFirstNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                                        .addComponent(uLastNameField))
                                    .addComponent(uPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(uCancelButton)
                .addGap(10, 10, 10))
            .addGroup(addUserFrameLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(pStockText1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(uAccessField, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        addUserFrameLayout.setVerticalGroup(
            addUserFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addUserFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addUserFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uFirstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pNameText1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addUserFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pDescriptionText1)
                    .addComponent(uLastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addUserFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pCategoryText1)
                    .addComponent(uEmailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addUserFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pPriceText1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addUserFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(uAccessField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(addUserFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(pStockText1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(addUserFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uConfirmButton)
                    .addComponent(uCancelButton))
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Product Table");

        productFrame.setPreferredSize(new java.awt.Dimension(600, 500));

        updateProductButton.setText("Update Product");
        updateProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateProductButtonActionPerformed(evt);
            }
        });

        addProductButton.setText("Add Product");
        addProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProductButtonActionPerformed(evt);
            }
        });

        removeProductButton.setText("Remove Product");
        removeProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeProductButtonActionPerformed(evt);
            }
        });

        productBackButton.setText("Back");

        productTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ProductID", "orderID", "Description", "Price", "Name", "In Stock", "Max Stock", "Min Stock", "Category"
            }
        ));
        jScrollPane2.setViewportView(productTable);

        searchButton.setText("Search");

        addUserButton.setText("Add User");
        addUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout productFrameLayout = new javax.swing.GroupLayout(productFrame);
        productFrame.setLayout(productFrameLayout);
        productFrameLayout.setHorizontalGroup(
            productFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(productFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(productFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE)
                    .addGroup(productFrameLayout.createSequentialGroup()
                        .addGroup(productFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(removeProductButton)
                            .addComponent(updateProductButton)
                            .addComponent(addProductButton))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, productFrameLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(productBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, productFrameLayout.createSequentialGroup()
                        .addComponent(addUserButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(searchButton)))
                .addContainerGap())
        );
        productFrameLayout.setVerticalGroup(
            productFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(productFrameLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(productFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton)
                    .addComponent(addUserButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updateProductButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addProductButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeProductButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(productBackButton)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(productFrame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(productFrame, javax.swing.GroupLayout.DEFAULT_SIZE, 504, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateProductButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateProductButtonActionPerformed

    private void pNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pNameFieldActionPerformed

    private void pStockFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pStockFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pStockFieldActionPerformed

    private void pMinStockFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pMinStockFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pMinStockFieldActionPerformed

    private void addProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProductButtonActionPerformed
        //Reset all text fields/areas to null
        pNameField.setText("");
        pDescriptionField.setText("");
        pCategoryField.setText("");
        pPriceField.setText("");
        pStockField.setText("");
        pMinStockField.setText("");
        pMaxStockField.setText("");
        
        addProductFrame.setVisible(true);
    }//GEN-LAST:event_addProductButtonActionPerformed

    private void pPriceFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pPriceFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pPriceFieldActionPerformed

    private void pCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pCancelButtonActionPerformed
        addProductFrame.setVisible(false);
    }//GEN-LAST:event_pCancelButtonActionPerformed

    private void pConfirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pConfirmButtonActionPerformed
        addProduct();
        addProductFrame.setVisible(false);
    }//GEN-LAST:event_pConfirmButtonActionPerformed

    private void addUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserButtonActionPerformed
        addUserFrame.setVisible(true);
    }//GEN-LAST:event_addUserButtonActionPerformed

    private void uFirstNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uFirstNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_uFirstNameFieldActionPerformed

    private void uAccessFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uAccessFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_uAccessFieldActionPerformed

    private void uConfirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uConfirmButtonActionPerformed
        addUser();
    }//GEN-LAST:event_uConfirmButtonActionPerformed

    private void uCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uCancelButtonActionPerformed
        addUserFrame.setVisible(false);
    }//GEN-LAST:event_uCancelButtonActionPerformed

    private void removeProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeProductButtonActionPerformed
        deleteProduct();
    }//GEN-LAST:event_removeProductButtonActionPerformed

    //Adds a user to the database based on the info inputted in the addUserFrame
    public void addUser(){
        
        try {
            myConn = DriverManager.getConnection(url,user,password);
            if (myConn != null) {
                //System.out.println("Successfully connected to MySQL database test");
            }
            
            Statement stmt = myConn.createStatement();
            String query = "select count(*) from our_company.users";
            ResultSet rs = stmt.executeQuery(query);
            rs.next();
            int userCount = rs.getInt(1);

            String sql = "insert into our_company.users (user_ID, first_name, last_name, email_ID, password, last_login_date, access) values (?, ?, ?, ?, ?, ?, ?)";
            PreparedStatement statement = myConn.prepareStatement(sql);
            statement.setInt(1, userCount+1);
            statement.setString(2, uFirstNameField.getText());
            statement.setString(3, uLastNameField.getText());
            statement.setString(4, uEmailField.getText());
            statement.setString(5, uPasswordField.getPassword().toString());
            statement.setDate(6, java.sql.Date.valueOf(java.time.LocalDate.now()));
            statement.setInt(7, Integer.parseInt(uAccessField.getText()));

            int rowsInserted = statement.executeUpdate();
            if(rowsInserted > 0){
                System.out.println("New user inserted successfully!");
            }

        } catch (SQLException ex) {
            System.out.println("An error occurred while connecting MySQL databse");
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        
        
    }
    
    //Adds a product into the database based on the info inputted in the addProductFrame
    public void addProduct(){
        
        try {
            myConn = DriverManager.getConnection(url,user,password);
            if (myConn != null) {
                //System.out.println("Successfully connected to MySQL database test");
            }
            
            Statement stmt = myConn.createStatement();
            String query = "SELECT * FROM our_company.product ORDER BY product_ID DESC LIMIT 1";
            ResultSet rs = stmt.executeQuery(query);
            rs.next();
            int recentProductID = rs.getInt("product_ID");

            //  ---INSERT STATEMENT---
            String sql = "insert into our_company.product (product_ID, order_ID, description, Price, product_name, in_stock, max_stock, min_stock, category) values (?, ?, ?, ?, ?, ?, ?, ?, ?)";
            PreparedStatement statement = myConn.prepareStatement(sql);
            
            statement.setInt(1, recentProductID+1);
            statement.setInt(2, 1); //not sure how to link to order_ID
            statement.setString(3, pDescriptionField.getText());
            statement.setDouble(4, Double.parseDouble(pPriceField.getText()));
            statement.setString(5, pNameField.getText());
            statement.setInt(6, Integer.parseInt(pStockField.getText()));
            statement.setInt(7, Integer.parseInt(pMaxStockField.getText()));
            statement.setInt(8, Integer.parseInt(pMinStockField.getText()));
            statement.setString(9, pCategoryField.getText());

            int rowsInserted = statement.executeUpdate();
            if(rowsInserted > 0){
                System.out.println("New product added successfully!");
            }

        } catch (SQLException ex) {
            System.out.println("An error occurred while connecting MySQL databse");
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        
        updateProductTable();
    }
    
    //Helps Update the GUI whenever the product table is changed
    //Notes: Maybe add some arguments for sorting later
    public void updateProductTable(){
                
        try {
            myConn = DriverManager.getConnection(url,user,password);
            PreparedStatement pst = myConn.prepareStatement("select * from our_company.product"); 
            ResultSet rs = pst.executeQuery();
            int i = 0; 
            
            DefaultTableModel table = new DefaultTableModel(new String [] {"ProductID", "orderID", "Description", "Price", "Name", "In Stock", "Max Stock", "Min Stock", "Category"},0);
            
            while (rs.next()) { 
                int  id = rs.getInt("product_ID");
                int orderID = rs.getInt("order_ID");
                String description = rs.getString("description");
                int price = rs.getInt("Price");
                String name = rs.getString("product_name");
                int stock = rs.getInt("in_stock");
                int maxStock = rs.getInt("max_stock");
                int minStock = rs.getInt("min_stock");
                String category = rs.getString("category");
                
                table.addRow(new Object[]{id, orderID, description, price, name, stock, maxStock, minStock, category});
                productTable.setModel(table);
            
            }
        }catch (SQLException ex) {
                System.out.println("An error occurred while connecting MySQL databse");
                                ex.printStackTrace();
                throw new RuntimeException(ex);
        }
        
    }
    
    //Deletes a product from the database
    //Note: GUI isn't updating when deleting the last product
    public void deleteProduct(){
        int row = productTable.getSelectedRow();
        String queryID = productTable.getModel().getValueAt(row, 0).toString();
        String query = "delete from our_company.product where product_ID=" + queryID;
        
        try {
            myConn = DriverManager.getConnection(url,user,password);
            PreparedStatement pst = myConn.prepareStatement(query); 
            pst.execute();


        }catch (SQLException ex) {
                System.out.println("An error occurred while connecting MySQL databse");
                                ex.printStackTrace();
                throw new RuntimeException(ex);
        }
        
        updateProductTable();
        System.out.println("Product successfully removed");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(database.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(database.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(database.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(database.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new database().setVisible(true);
            }
        });
        
        
        /*
        {
        try {
            myConn = DriverManager.getConnection(url,user,password);
            if (myConn != null) {
                System.out.println("Successfully connected to MySQL database test");
            }
        }
            catch (SQLException ex) {
                System.out.println("An error occurred while connecting MySQL databse");
                                ex.printStackTrace();
                throw new RuntimeException(ex);
            }
        }
        
        /* ---SQL CONNECTION---
        String url = "jdbc:mysql://127.0.0.1:3306/?user=root";
        String user = "root";
        String password = "admin";
        Connection myConn;

        {
            try {
                myConn = DriverManager.getConnection(url,user,password);
                if (myConn != null) {
                    System.out.println("Successfully connected to MySQL database test");
                }

                //  ---INSERT STATEMENT---
                String sql = "insert into our_company.users (user_ID, first_name, last_name, email_ID, password, last_login_date, access) values (?, ?, ?, ?, ?, ?, ?)";
                PreparedStatement statement = myConn.prepareStatement(sql);
                statement.setInt(1, 1);
                statement.setString(2, "Bill");
                statement.setString(3, "Gates");
                statement.setString(4, "bg@gmail.com");
                statement.setString(5, "bgpass");
                statement.setDate(6, java.sql.Date.valueOf(java.time.LocalDate.now()));
                statement.setInt(7, 1);

                int rowsInserted = statement.executeUpdate();
                if(rowsInserted > 0){
                    System.out.println("New user inserted successfully!");
                }

                //  ---SELECT STATEMENT---
                sql = "select * from our_company.users";
                Statement myStmt = myConn.createStatement();
                ResultSet rs = myStmt.executeQuery(sql);

                while (rs.next()) {
                    int id = rs.getInt(1);
                    String firstName = rs.getString(2);
                    String lastName = rs.getString(3);
                    String email = rs.getString(4);
                    String pass = rs.getString(5);

                    String output = "User #%d: %s - %s - %s - %s";
                    System.out.println(String.format(output, id, firstName, lastName, email, pass));
                }



            } catch (SQLException ex) {
                System.out.println("An error occurred while connecting MySQL databse");
                                ex.printStackTrace();
                throw new RuntimeException(ex);
            }
        }
        
        //---END OF SQL INSTRUCTIONS---*/

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addProductButton;
    private javax.swing.JFrame addProductFrame;
    private javax.swing.JButton addUserButton;
    private javax.swing.JFrame addUserFrame;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton pCancelButton;
    private javax.swing.JTextField pCategoryField;
    private javax.swing.JLabel pCategoryText;
    private javax.swing.JLabel pCategoryText1;
    private javax.swing.JButton pConfirmButton;
    private javax.swing.JTextArea pDescriptionField;
    private javax.swing.JLabel pDescriptionText;
    private javax.swing.JLabel pDescriptionText1;
    private javax.swing.JTextField pMaxStockField;
    private javax.swing.JLabel pMaxStockText;
    private javax.swing.JTextField pMinStockField;
    private javax.swing.JLabel pMinStockText;
    private javax.swing.JTextField pNameField;
    private javax.swing.JLabel pNameText;
    private javax.swing.JLabel pNameText1;
    private javax.swing.JTextField pPriceField;
    private javax.swing.JLabel pPriceText;
    private javax.swing.JLabel pPriceText1;
    private javax.swing.JTextField pStockField;
    private javax.swing.JLabel pStockText;
    private javax.swing.JLabel pStockText1;
    private javax.swing.JButton productBackButton;
    private javax.swing.JPanel productFrame;
    private javax.swing.JTable productTable;
    private javax.swing.JButton removeProductButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchField;
    private javax.swing.JTextField uAccessField;
    private javax.swing.JButton uCancelButton;
    private javax.swing.JButton uConfirmButton;
    private javax.swing.JTextField uEmailField;
    private javax.swing.JTextField uFirstNameField;
    private javax.swing.JTextField uLastNameField;
    private javax.swing.JPasswordField uPasswordField;
    private javax.swing.JButton updateProductButton;
    // End of variables declaration//GEN-END:variables
}
